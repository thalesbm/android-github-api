apply plugin: 'com.android.application'

android {
    compileSdkVersion 28

    defaultConfig {
        applicationId "br.tbm.github.api"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        // testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "br.tbm.github.api.MockRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    // OUTPUT: android-github-api/app/build/reports
    // A api do github Ã© um tanto quanto limitada no quesito de quantidade de requisicoes, caso
    // atinja o maximo nao vai mais ser possivel utilizar o app por um determinado tempo e se rodar
    // os testes quase todos vao falhar
    task runTests(dependsOn: ['clean', 'test', 'connectedAndroidTest']) {
        group = 'Github API Tasks'
        description = "Executa todos os testes relacionados com o aplicativo"
    }

    tasks.withType(Test) {
        testLogging {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            exceptionFormat "full"
        }

        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Results: ${result.resultType} (" +
                        "${result.testCount} tested, " +
                        "${result.successfulTestCount} successed, " +
                        "${result.failedTestCount} failured, " +
                        "${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // ANDROID
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$supportLayoutVersion"

    // ORMLITE
    implementation "com.j256.ormlite:ormlite-core:$ormLiteVersion"
    implementation "com.j256.ormlite:ormlite-android:$ormLiteVersion"

    // RETROFIT
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation 'com.squareup.retrofit2:retrofit-mock:2.5.0'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"

    // PICASSO
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    // BUTTER KNIFE
    implementation "com.jakewharton:butterknife:$butterKnifeVersion-rc1"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion-rc1"

    // TEST IMPLEMENTATION
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testImplementation "org.mockito:mockito-core:$mockito"

    // TEST SQUAREUP
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.14.2'
    androidTestImplementation 'com.squareup.retrofit2:retrofit-mock:2.5.0'
    androidTestImplementation 'com.squareup.okhttp:mockwebserver:2.7.0'
    androidTestImplementation 'com.squareup.spoon:spoon-client:1.2.0'

    // TEST SCREENS
    androidTestImplementation "com.android.support:support-annotations:$supportLibraryVersion"
    androidTestImplementation "com.android.support.test:runner:$androidTestVersion"
    androidTestImplementation "com.android.support.test:rules:$androidTestVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"

    implementation "com.google.guava:guava:$guavaVersion"
}
